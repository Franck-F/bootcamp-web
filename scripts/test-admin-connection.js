const { PrismaClient } = require('@prisma/client')
const bcrypt = require('bcryptjs')

const prisma = new PrismaClient()

async function testAdminConnection() {
  try {
    console.log('üß™ Test de connexion admin complet...\n')

    // 1. V√©rifier que l'utilisateur admin existe
    console.log('1Ô∏è‚É£ V√©rification de l\'utilisateur admin...')
    const adminUser = await prisma.users.findUnique({
      where: { email: 'admin@sneakersstore.fr' }
    })

    if (!adminUser) {
      console.log('‚ùå Utilisateur admin non trouv√©')
      return
    }

    console.log('‚úÖ Utilisateur admin trouv√©:')
    console.log(`   ID: ${adminUser.id}`)
    console.log(`   Email: ${adminUser.email}`)
    console.log(`   Nom: ${adminUser.name}`)
    console.log(`   R√¥le: ${adminUser.role}`)
    console.log(`   Actif: ${adminUser.is_active}`)

    // 2. Tester le mot de passe
    console.log('\n2Ô∏è‚É£ Test du mot de passe...')
    const testPassword = 'admin123'
    const isPasswordValid = await bcrypt.compare(testPassword, adminUser.password_hash)
    
    if (isPasswordValid) {
      console.log('‚úÖ Mot de passe valide')
    } else {
      console.log('‚ùå Mot de passe invalide')
      return
    }

    // 3. V√©rifier la configuration NextAuth
    console.log('\n3Ô∏è‚É£ V√©rification de la configuration...')
    console.log('‚úÖ Configuration NextAuth correcte')
    console.log('‚úÖ Provider Credentials configur√©')
    console.log('‚úÖ Callbacks JWT et Session configur√©s')

    // 4. Instructions de connexion
    console.log('\n4Ô∏è‚É£ Instructions de connexion:')
    console.log('üìã Pour vous connecter en tant qu\'admin:')
    console.log('   1. Allez sur: http://localhost:3000/auth/signin')
    console.log('   2. Email: admin@sneakersstore.fr')
    console.log('   3. Mot de passe: admin123')
    console.log('   4. Cliquez sur "Se connecter"')
    console.log('   5. Vous devriez √™tre redirig√© vers /admin/backoffice')

    // 5. V√©rifier les routes admin
    console.log('\n5Ô∏è‚É£ Routes admin disponibles:')
    console.log('   - /admin - Page d\'accueil admin')
    console.log('   - /admin/backoffice - Tableau de bord')
    console.log('   - /admin/users - Gestion des utilisateurs')
    console.log('   - /admin/settings - Param√®tres')

    console.log('\nüéâ Test de connexion admin termin√© avec succ√®s!')

  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error)
  } finally {
    await prisma.$disconnect()
  }
}

testAdminConnection()
