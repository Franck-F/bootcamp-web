const bcrypt = require('bcryptjs')

async function testAdminAPI() {
  try {
    console.log('üß™ Test de l\'API de connexion admin...\n')

    // Test de connexion avec les bonnes credentials
    const credentials = {
      email: 'admin@sneakersstore.fr',
      password: 'admin123'
    }

    console.log('üì§ Test de connexion avec les credentials:')
    console.log(`   Email: ${credentials.email}`)
    console.log(`   Mot de passe: ${credentials.password}`)

    // Simuler une requ√™te de connexion
    const response = await fetch('http://localhost:3000/api/auth/signin', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(credentials)
    })

    console.log(`\nüì• R√©ponse de l'API:`)
    console.log(`   Status: ${response.status}`)
    console.log(`   Status Text: ${response.statusText}`)

    if (response.ok) {
      const data = await response.json()
      console.log(`   Donn√©es:`, data)
      console.log('‚úÖ Connexion r√©ussie !')
    } else {
      const error = await response.text()
      console.log(`   Erreur: ${error}`)
      console.log('‚ùå Connexion √©chou√©e')
    }

    console.log('\nüîç V√©rification des variables d\'environnement:')
    console.log(`   NEXTAUTH_SECRET: ${process.env.NEXTAUTH_SECRET ? '‚úÖ D√©fini' : '‚ùå Non d√©fini'}`)
    console.log(`   NEXTAUTH_URL: ${process.env.NEXTAUTH_URL ? '‚úÖ D√©fini' : '‚ùå Non d√©fini'}`)
    console.log(`   DATABASE_URL: ${process.env.DATABASE_URL ? '‚úÖ D√©fini' : '‚ùå Non d√©fini'}`)

  } catch (error) {
    console.error('‚ùå Erreur lors du test API:', error.message)
    console.log('\nüí° Suggestions:')
    console.log('   1. V√©rifiez que le serveur de d√©veloppement est d√©marr√© (npm run dev)')
    console.log('   2. V√©rifiez que le port 3000 est accessible')
    console.log('   3. V√©rifiez les variables d\'environnement dans .env')
  }
}

testAdminAPI()
