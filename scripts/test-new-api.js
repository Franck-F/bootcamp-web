async function testNewAPI() {
  try {
    console.log('üß™ Test de l\'API avec la nouvelle base de donn√©es...\n')

    // Test 1: Produits featured
    console.log('1Ô∏è‚É£ Test des produits featured:')
    const featuredResponse = await fetch('http://localhost:3001/api/products?featured=true&limit=3')
    const featuredData = await featuredResponse.json()
    
    console.log(`   ‚úÖ ${featuredData.products.length} produits featured trouv√©s`)
    featuredData.products.forEach((product, index) => {
      console.log(`   ${index + 1}. ${product.name} - ${product.brand?.name} - ${product.price}‚Ç¨`)
      console.log(`      Images: ${product.images?.length || 0}, Variantes: ${product.variants?.length || 0}`)
    })

    // Test 2: Produits r√©cents
    console.log('\n2Ô∏è‚É£ Test des produits r√©cents:')
    const recentResponse = await fetch('http://localhost:3001/api/products?sortBy=newest&limit=5')
    const recentData = await recentResponse.json()
    
    console.log(`   ‚úÖ ${recentData.products.length} produits r√©cents trouv√©s`)
    recentData.products.slice(0, 3).forEach((product, index) => {
      console.log(`   ${index + 1}. ${product.name} - ${product.brand?.name} - ${product.price}‚Ç¨`)
    })

    // Test 3: Recherche par marque
    console.log('\n3Ô∏è‚É£ Test de recherche par marque (Nike):')
    const nikeResponse = await fetch('http://localhost:3001/api/products?brand=Nike&limit=3')
    const nikeData = await nikeResponse.json()
    
    console.log(`   ‚úÖ ${nikeData.products.length} produits Nike trouv√©s`)
    nikeData.products.forEach((product, index) => {
      console.log(`   ${index + 1}. ${product.name} - ${product.price}‚Ç¨`)
    })

    // Test 4: Statistiques g√©n√©rales
    console.log('\n4Ô∏è‚É£ Test des statistiques:')
    const statsResponse = await fetch('http://localhost:3001/api/products?limit=1')
    const statsData = await statsResponse.json()
    
    console.log(`   ‚úÖ Total produits: ${statsData.pagination.total}`)
    console.log(`   ‚úÖ Pages totales: ${statsData.pagination.totalPages}`)

    // Test 5: Produit individuel
    if (featuredData.products.length > 0) {
      console.log('\n5Ô∏è‚É£ Test d\'un produit individuel:')
      const productId = featuredData.products[0].id
      const productResponse = await fetch(`http://localhost:3001/api/products/${productId}`)
      const productData = await productResponse.json()
      
      console.log(`   ‚úÖ Produit ID ${productId}: ${productData.name}`)
      console.log(`   ‚úÖ Marque: ${productData.brand?.name}`)
      console.log(`   ‚úÖ Cat√©gorie: ${productData.category?.name}`)
      console.log(`   ‚úÖ Prix: ${productData.price}‚Ç¨`)
      console.log(`   ‚úÖ Images: ${productData.images?.length || 0}`)
      console.log(`   ‚úÖ Variantes: ${productData.variants?.length || 0}`)
    }

    console.log('\nüéâ Tous les tests API sont pass√©s avec succ√®s!')

  } catch (error) {
    console.error('‚ùå Erreur lors des tests:', error)
  }
}

testNewAPI()
